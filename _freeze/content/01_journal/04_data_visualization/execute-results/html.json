{
  "hash": "b1e737c9ddc6de54508a975a64ea8e69",
  "result": {
    "markdown": "---\ntitle: \"Automated Machine Learning with H20 (II)\"\nauthor: \"Tommy Weber\"\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_3c8c7770bdb4f67e5ba6ec3ca61ecd22'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.1     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(rsample)\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attache Paket: 'recipes'\n#> \n#> Das folgende Objekt ist maskiert 'package:stringr':\n#> \n#>     fixed\n#> \n#> Das folgende Objekt ist maskiert 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(h2o)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> ----------------------------------------------------------------------\n#> \n#> Your next step is to start H2O:\n#>     > h2o.init()\n#> \n#> For H2O package documentation, ask for help:\n#>     > ??h2o\n#> \n#> After starting H2O, you can use the Web UI at http://localhost:54321\n#> For more information visit https://docs.h2o.ai\n#> \n#> ----------------------------------------------------------------------\n#> \n#> \n#> Attache Paket: 'h2o'\n#> \n#> Die folgenden Objekte sind maskiert von 'package:lubridate':\n#> \n#>     day, hour, month, week, year\n#> \n#> Die folgenden Objekte sind maskiert von 'package:stats':\n#> \n#>     cor, sd, var\n#> \n#> Die folgenden Objekte sind maskiert von 'package:base':\n#> \n#>     %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n#>     colnames<-, ifelse, is.character, is.factor, is.numeric, log,\n#>     log10, log1p, log2, round, signif, trunc\n```\n:::\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         1 days 7 hours \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    1 month and 15 days \n#>     H2O cluster name:           H2O_started_from_R_Super_drs368 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   2.88 GB \n#>     H2O cluster total cores:    16 \n#>     H2O cluster allowed cores:  16 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15 ucrt)\n```\n:::\n\n```{.r .cell-code}\nset.seed(seed = 1113)\n\nproduct_backorder_tbl <- read.csv(\"../../../product_backorders.csv\")\n\nsplit_obj <- rsample::initial_split(product_backorder_tbl, prop = 0.85)\n\ntrain_readable_tbl <- training(split_obj)\ntest_readable_tbl <- testing(split_obj)\n\nrecipe_obj <- recipe(went_on_backorder ~ ., data = train_readable_tbl) %>% \n  update_role(sku, new_role = \"ID\") %>% \n  step_zv(all_predictors()) %>% \n  step_mutate_at(all_nominal(), fn = as.factor) %>% \n  prep()\n\ntrain_tbl <- bake(recipe_obj, new_data = train_readable_tbl)\ntest_tbl <- bake(recipe_obj, new_data = test_readable_tbl)\n\nsplit_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 1234)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntrain_h2o <- split_h2o[[1]]\nvalid_h2o <- split_h2o[[2]]\ntest_h2o <- as.h2o(test_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ny <- \"went_on_backorder\"\nx <- setdiff(names(train_h2o), c(y, \"sku\"))\n\nautoml_models_h2o <- h2o.automl(\n  x = x,\n  y = y,\n  training_frame = train_h2o,\n  validation_frame = valid_h2o,\n  leaderboard_frame = test_h2o,\n  max_runtime_secs = 30,\n  nfolds = 5\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |===                                                                   |   4%\n#> 18:09:01.255: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n#> 18:09:01.263: AutoML: XGBoost is not available; skipping it.\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nautoml_models_h2o@leaderboard\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                                  model_id       auc   logloss\n#> 1    StackedEnsemble_AllModels_1_AutoML_2_20230612_180901 0.9458232 0.1793069\n#> 2                          GBM_3_AutoML_2_20230612_180901 0.9437366 0.1884313\n#> 3                          GBM_4_AutoML_2_20230612_180901 0.9437111 0.1856514\n#> 4 StackedEnsemble_BestOfFamily_2_AutoML_2_20230612_180901 0.9430520 0.1833713\n#> 5 StackedEnsemble_BestOfFamily_1_AutoML_2_20230612_180901 0.9423236 0.1834429\n#> 6                          GBM_1_AutoML_2_20230612_180901 0.9422929 0.1834995\n#>       aucpr mean_per_class_error      rmse        mse\n#> 1 0.7367996            0.1446585 0.2317323 0.05369984\n#> 2 0.7226944            0.1852498 0.2348917 0.05517409\n#> 3 0.7195035            0.1748152 0.2340558 0.05478214\n#> 4 0.7240175            0.1797723 0.2329683 0.05427422\n#> 5 0.7294280            0.1524613 0.2345125 0.05499609\n#> 6 0.7290618            0.1528591 0.2344548 0.05496906\n#> \n#> [12 rows x 7 columns]\n```\n:::\n\n```{.r .cell-code}\nleader <- automl_models_h2o %>% h2o.get_best_model()\n\nh2o.predict(leader, newdata = test_h2o)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#>   predict        No       Yes\n#> 1     Yes 0.7193231 0.2806769\n#> 2     Yes 0.2375642 0.7624358\n#> 3     Yes 0.5185319 0.4814681\n#> 4     Yes 0.6439856 0.3560144\n#> 5     Yes 0.1382987 0.8617013\n#> 6      No 0.7541215 0.2458785\n#> \n#> [2858 rows x 3 columns]\n```\n:::\n\n```{.r .cell-code}\nleader %>% h2o.saveModel(\"../../my_models/AutoML2_Model\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"C:\\\\Users\\\\Super\\\\Documents\\\\Studium\\\\BusinessDataScience\\\\BusinessDecisionsAndMachineLearning\\\\ss23-bdml-RegulusAstri\\\\my_models\\\\AutoML2_Model\\\\StackedEnsemble_AllModels_1_AutoML_2_20230612_180901\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}