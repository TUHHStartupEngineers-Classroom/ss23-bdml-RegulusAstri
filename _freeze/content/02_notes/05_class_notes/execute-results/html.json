{
  "hash": "54ab76b14d9d14b52e35e197d26e0cd9",
  "result": {
    "markdown": "---\ntitle: \"Class Notes\"\nauthor: \"Tommy Weber\"\n---\n\n::: {.cell hash='05_class_notes_cache/html/unnamed-chunk-1_2478e4679ca2dc6e865a2652a73389be'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\nemployee_attrition_tbl <- read.csv(\"../../../employee_attrition.csv\")\n\npath_data_definitions <- \"../../../data_definitions.xlsx\"\ndefinitions_raw_tbl   <- read_excel(path_data_definitions, sheet = 1, col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n• `` -> `...2`\n```\n:::\n\n```{.r .cell-code}\ndefinitions_tbl <- definitions_raw_tbl %>% \n  fill(...1, .direction = \"down\") %>% \n  filter(!is.na(...2)) %>% \n  separate(...2, into = c(\"key\", \"value\"), sep = \" '\", remove = TRUE) %>% \n  rename(column_name = ...1) %>% \n  mutate(key = as.numeric(key)) %>% \n  mutate(value = value %>% str_replace(pattern = \"'\", replacement = \"\"))\n\n\ndefinitions_list <- definitions_tbl %>% \n  split(.$column_name) %>% \n  map(~ select(., -column_name)) %>% \n  map(~ mutate(., value = as_factor(value)))\n\n\nfor (i in seq_along(definitions_list)) {\n  list_name <- names(definitions_list)[i]\n  colnames(definitions_list[[i]]) <- c(list_name, paste0(list_name, \"_value\"))\n}\n\n\ndata_merged_tbl <- list(HR_Data = employee_attrition_tbl) %>% \n  append(definitions_list, after = 1) %>% \n  reduce(left_join) %>% \n  select(-one_of(names(definitions_list))) %>% \n  set_names(str_replace_all(names(.), pattern = \"_value\", replacement = \"\")) %>% \n  select(sort(names(.)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(Education)`\nJoining with `by = join_by(EnvironmentSatisfaction)`\nJoining with `by = join_by(JobInvolvement)`\nJoining with `by = join_by(JobSatisfaction)`\nJoining with `by = join_by(PerformanceRating)`\nJoining with `by = join_by(RelationshipSatisfaction)`\nJoining with `by = join_by(WorkLifeBalance)`\n```\n:::\n\n```{.r .cell-code}\ndata_processed_tbl <- data_merged_tbl %>%\n  mutate_if(is.character, as.factor) %>% \n  mutate(\n    BusinessTravel = BusinessTravel %>% fct_relevel(\"Non-Travel\",\n                                                    \"Travel_Rarely\",\n                                                    \"Travel_Frequently\"),\n    MaritalStatus = MaritalStatus %>% fct_relevel(\"Single\",\n                                                  \"Married\",\n                                                  \"Divorced\")\n    )\n\ndata_processed_tbl %>% \n  select_if(is.factor) %>% \n  map(levels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Attrition\n[1] \"No\"  \"Yes\"\n\n$BusinessTravel\n[1] \"Non-Travel\"        \"Travel_Rarely\"     \"Travel_Frequently\"\n\n$Department\n[1] \"Human Resources\"        \"Research & Development\" \"Sales\"                 \n\n$Education\n[1] \"Below College\" \"College\"       \"Bachelor\"      \"Master\"       \n[5] \"Doctor\"       \n\n$EducationField\n[1] \"Human Resources\"  \"Life Sciences\"    \"Marketing\"        \"Medical\"         \n[5] \"Other\"            \"Technical Degree\"\n\n$EnvironmentSatisfaction\n[1] \"Low\"       \"Medium\"    \"High\"      \"Very High\"\n\n$Gender\n[1] \"Female\" \"Male\"  \n\n$JobInvolvement\n[1] \"Low\"       \"Medium\"    \"High\"      \"Very High\"\n\n$JobRole\n[1] \"Healthcare Representative\" \"Human Resources\"          \n[3] \"Laboratory Technician\"     \"Manager\"                  \n[5] \"Manufacturing Director\"    \"Research Director\"        \n[7] \"Research Scientist\"        \"Sales Executive\"          \n[9] \"Sales Representative\"     \n\n$JobSatisfaction\n[1] \"Low\"       \"Medium\"    \"High\"      \"Very High\"\n\n$MaritalStatus\n[1] \"Single\"   \"Married\"  \"Divorced\"\n\n$Over18\n[1] \"Y\"\n\n$OverTime\n[1] \"No\"  \"Yes\"\n\n$PerformanceRating\n[1] \"Low\"         \"Good\"        \"Excellent\"   \"Outstanding\"\n\n$RelationshipSatisfaction\n[1] \"Low\"       \"Medium\"    \"High\"      \"Very High\"\n\n$WorkLifeBalance\n[1] \"Bad\"    \"Good\"   \"Better\" \"Best\"  \n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}